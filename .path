#!/bin/sh

# go path
export GOPATH="${HOME}/.go"

# update path
export PATH=/usr/local/bin:${PATH}:/sbin:/usr/local/sbin

# add go path
export PATH="/usr/local/go/bin:${GOPATH}/bin:${PATH}"

# add rust path
export PATH="${HOME}/.cargo/bin:${PATH}"

# add bcc tools path
export PATH="/usr/share/bcc/tools:${PATH}"

# add gnubin for mac
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:${PATH}"

# add scdaemon
export PATH="/usr/lib/gnupg:${PATH}"

# add gnu getopt
export PATH="/usr/local/opt/gnu-getopt/bin:${PATH}"

# add mysql
export PATH="/opt/homebrew/opt/mysql-client/bin:${PATH}"

# update cdpath
export CDPATH=${CDPATH}:${GOPATH}/src/github.com:${GOPATH}/src/golang.org:${GOPATH}/src

export PATH="${HOME}/.google-cloud-sdk/bin:${PATH}"

# The next line updates PATH for the Google Cloud SDK.
# shellcheck source=/dev/null
if [ -f "${HOME}/.google-cloud-sdk/path.bash.inc" ]; then . "${HOME}/.google-cloud-sdk/path.bash.inc"; fi

# The next line enables shell command completion for gcloud.
# shellcheck source=/dev/null
if [ -f "${HOME}/.google-cloud-sdk/completion.bash.inc" ]; then . "${HOME}/.google-cloud-sdk/completion.bash.inc"; fi

# update path for gnu coreutils, make & find on darwin
export PATH=/usr/local/opt/coreutils/libexec/gnubin:${PATH}
export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:${MANPATH}
export PATH=/usr/local/opt/make/libexec/gnubin:${PATH}
export MANPATH=/usr/local/opt/make/libexec/gnuman:${MANPATH}
export PATH=/usr/local/opt/findutils/libexec/gnubin:${PATH}
export MANPATH=/usr/local/opt/findutils/libexec/gnuman:${MANPATH}

# Homebrew
export PATH="/opt/homebrew/bin:${PATH}"
export PATH="/opt/homebrew/sbin:${PATH}"
export LIBRARY_PATH="/opt/homebrew/lib:${LIBRARY_PATH}"
export LDFLAGS="${LDFLAGS} -L/opt/homebrew/lib"
export CPPFLAGS="${CPPFLAGS} -I/opt/homebrew/include"

# OpenSSL
export PATH="/opt/homebrew/opt/openssl/bin:${PATH}"
export LDFLAGS="${LDFLAGS} -L/opt/homebrew/opt/openssl/lib"
export CPPFLAGS="${CPPFLAGS} -I/opt/homebrew/opt/openssl/include"
export OPENSSL_ROOT_DIR="/opt/homebrew/opt/openssl"
export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}"

export MYSQL_INCLUDE_DIR="/opt/homebrew/opt/mysql-client/include/mysql"

# LLVM
export PATH="/opt/homebrew/opt/llvm/bin:${PATH}"

# CXXFLAGS
CXXFLAGS="${CXXFLAGS} -stdlib=libc++ -Wno-deprecated-declarations -Wno-deprecated -framework CoreFoundation"

# Rust
RUST_SYSROOT="$(rustc --print sysroot)"
export RUST_SRC_PATH="${RUST_SYSROOT}/lib/rustlib/src/rust/src"
export DYLD_LIBRARY_PATH="${RUST_SYSROOT}/lib:$DYLD_LIBRARY_PATH"

